
51:28
This is going to be the last workflow demonstration. Workflow number 10. This one's going to get a little bit weird. Uh, and this is really
51:33
meant to just kind of demonstrate something more broadly, which is that you can actually deploy Cloud Code in the cloud and have it do things
51:40
autonomously when you're on the go. You can do things like building WhatsApp integrations. Uh, you can build your own
51:45
custom app to manage this. All sorts of things to do. The easiest way to demonstrate this and to get started with at least just experimenting with this
51:52
type of workflow is going to be with Claude's custom GitHub action. So, what I'm going to do here is I'm actually
51:57
going to use Cloud Code itself to create me a new Git repository. And what we're going to do is we're going to set up Claude Codes GitHub action on our GitHub
52:04
repository. So, GitHub also an interesting thing to integrate with an Obsidian vault because it also gives you
52:10
version control on your vault. So, this is something uh that I'll experiment with from time to time on kind of test
52:16
vaults. I actually don't necessarily do this workflow with GitHub on my main vault. I actually have my own
52:21
infrastructure built out to handle that these days. But we're just going to demonstrate this to you so you can get a feel for it and just see kind of the
52:28
magic of a workflow like this. So what we'll do is we'll say I need you to initialize a new GitHub repo and push it
52:33
to my GitHub as a private repository. Okay, so I can actually just tell Cloud
52:38
Code to do this. Cloud Code is intelligent enough to figure out how to use the GitHub CLI in conjunction with
52:44
initializing a new Git repository on my machine here for this vault. So, I'm probably losing some of you
52:50
non-technical people if you're not like a software engineer or developer or something like that. It's going to be a little bit weird for you. Uh you may
52:56
just want to sit tight and watch this one. Uh but it is pretty cool. I promise the payoff on this is cool. We're going
53:01
to have cloud code run get. This is going to initialize a new empty git repository here. And what we're going to
53:06
do is it's going to commit our files to GitHub and create a new repository with the GitHub CLI tool. Okay, so a lot of
53:13
different things happening. You can see those of you who are developers can see, okay, it's adding all files and then it's committing with initial commit
53:18
message. This just means that all the files that I have in my vault are getting added to a new repository that we are about to push to GitHub
53:26
cla Okay, so I'm just giving it a name. You can see cloud code's intelligent enough
53:32
to know it needs to ask me for a good name. So, it's going to create a new private git repository called Cloud Code Vault on my GitHub here. Going to push
53:38
this. Again, GH is just the command for the GitHub uh CLI, right? Just like
53:43
Cloud Code is a CLI. GitHub also has a CLI and this is what it's using. So, we're going to go ahead and proceed. I'm
53:49
going to let that create and then I'm going to go open that up inside of GitHub. You can see we're on github.com.
53:55
This is in my new vault that I have on Git. Okay. So, the idea here is you can do a couple things. If you want to use
54:02
version control in your vault, very cool thing to do. You can kind of get a running history of everything in your vault. Obviously, if we were configuring
54:08
this for real, we would do things like adding dstore to get ignore and all that kind of stuff, but we're just kind of we're just kind of going through the
54:13
motions here. Now, the important thing is inside of clot code, what we can now do is we can do slashinstall github app.
54:19
You can see this is a predetermined uh or kind of a pre-existing command inside of cloud code. This isn't like a command
54:24
I came up with. This is on everybody's instance of cloud code. And what we can do is we can just tab that. And then we're going to hit return. And this is
54:31
actually going to use the repository that we just set up and it's going to install the GitHub app on a repository.
54:37
So in my case on my account, Cloud is allowed to install the GitHub app on any repository. You're going to need to
54:42
install that for the first time or configure what repositories this particular GitHub app has uh access to.
54:48
Uh I can kind of just skip that because it already has access. So I can just kind of close that. And now you're going
54:54
to see if we go back to cloud code. We just need to initiate um this kind of
54:59
initial uh thing here. So you can see we can now select GitHub workflows to install. Both of these are checked. Uh
55:06
we're actually going to just accept both of these. So we'll just hit enter. And then you can see create a long live token with your cloud subscription. So
55:12
you can either use your own API key or your own cloud subscription token. We're just going to go ahead and use our
55:18
existing uh cloud token here. So we can just sign in directly with Anthrobic. Again, we've gone over this, but to use
55:24
cloud code, you do need either an API key or a Cloud subscription. In my case, I'm just using the Cloud Mac
55:31
subscription, the $200 one because I'm such a power user. You can see we now have a very introductory PR. This has
55:36
some information about how this particular integration works. We're just kind of speeding through this because you actually have to approve this before
55:42
the Apple work. You actually have to create that and then merge it and then you're going to be all set. Okay, so
55:48
that's merged. Uh we can delete that branch. Everything is ready to go. So now, how does this get interesting?
55:55
Let's switch over to the phone. I apologize guys, the audio is going to get a little bit weird here. You can see I am now on the GitHub app on my phone.
56:01
Okay, so let's imagine for a second that I'm on a walk. Let's say I'm on the walk and I actually want Claude to do some research for me in the background in the
56:08
cloud. And then when I come back to my computer, what I can do is I can actually go see its research inside of my vault. So what I'm going to do is I'm
56:13
going to go into issues here. And what I'm going to do is I'm going to create a new one in the top right here. And I'm just going to say test integration.
56:21
We're just going to do something really basic here. And I'm just going to say please make a new file in the vault
56:28
in the slash test folder called hello
56:33
world and write a funny joke. Not a runny joke, a funny joke
56:40
for my viewers. Okay. So what we're going to do is we're going to submit this. This is going to create a new
56:46
issue inside of my GitHub repository here. And what I can do is I can add a comment. You'll see this comment button
56:51
at the bottom. And because we've installed the Claude app, I can now actually tag Claude. You don't need to see uh anything there. And what we can
56:58
do is we can say, "Please handle this. Thanks." We'll do a smiley face. We'll
57:04
go ahead and leave that comment. And what's going to happen is this is actually going to kick off our GitHub
57:09
action. So anytime that we tag cloud code inside of issues, inside of PRs, it's actually going to go autonomously
57:15
handle this, which is super super cool. So we actually have to wait just a little bit to get set up. We're now
57:21
going to switch back over to the computer here so that I can show you how this works. So you guys can see this is
57:26
now triggered from my phone. Again, I apologize for the phone audio when we're back to the computer audio. You can see
57:33
theoretically, and I know I'm not literally doing this right now, but theoretically, I could have just been completely on the go, uh, not having to
57:39
be around my computer at all. And this cloud integration is now just running in the cloud, and it's actually running this, you know, without me needing to
57:45
accept anything. Um, all sorts of stuff. So, there's a lot of ways you can configure this to be a little bit more personalized to your vault. And again,
57:52
at this point in my own personal vault, I have kind of my own server that's running where I can trigger these
57:57
things. But I think the GitHub action is a really really quick way to at least get started and start playing around with this type of workflow. So what's
58:03
going to happen is cloud is basically going to look through all the comments in this issue. You can see it's going to check if a folder exists. You can see
58:08
it's going to create a hello world. You can also go in your GitHub. There's the actions here. You can see my issues
58:14
actually running is out of this tab. You can see it actually just finished up. So if we go to issues here, click test
58:19
integration. You can see uh it actually did in fact create that new file. Hello world. So what we can do now is we can
58:25
go back to our vault and because this was actually uh created. It was actually committed. So we go to code here. You
58:32
can see we're going to have uh presumably probably a new branch here. Okay. Awesome. So this is a new branch.
58:38
So what we want to do is probably just grab this branch name here uh and then actually ask Claude uh Cloud Code to
58:45
merge it. So, what we'll do is we'll go back to cloud code here. And what we're going to do is we're going to say, "Awesome.
58:51
We just had and we let's actually use speech to text here." By the way, you saw me clear that text really fast. If
58:57
you hit escape twice really quickly, it will clear your input. Okay, we just ran an automation. There's a new branch. We
59:03
need that to get merged into the master branch. And then we actually need you to pull so we get the latest version of our notes.
59:09
So, again, Cloud Code is very intelligent. It's going to know how to use the git CLI uh the github CLI rather
59:15
to go ahead and accomplish this task. So it's going to fetch all the remote branches. It's going to see the existing branches. It will ask us for permission
59:21
because we haven't configured permissions here. You can see that cloud issue two right there. It's going to go ahead and get merged into main. Okay. So
59:27
it looks like it's going to pull origin master and merge it with this branch. Awesome. Now it's going to go ahead and
59:32
allow us to see inside of test and inside of hello world. We now have a joke. Why don't scientists trust atoms?
59:37
Because they make up everything. So the workflow that we basically simulated here is that if I was on a walk, if I
59:44
was on my phone, I could go ahead and create a new issue on GitHub, I could use Cloud Code's GitHub uh integration
59:50
and basically kick one of these things off in the cloud, come back to my computer later, pull that research. So
59:55
again, silly little example here, but the goal is to get the wheels turning in your brain that you take the simplicity
60:01
of what I just demonstrated and you actually apply those concepts into practical real world workflow examples
60:06
into your own vault. Hopefully those 10 workflow tips will help you 10x your note-taking with AI agents, in
60:12
particular Cloud Code. The point of making this video is that Cloud Code is so much more than just a coding tool. It is a multi-purpose agent. It's very
60:19
flexible. It's very malleable. So, if you found this video helpful, helps me a lot. If you guys subscribe to my YouTube
60:24
channel or you follow me on X or if you are reading on Substack, go check out the accompanying blog post that we have
60:31
or that I have rather called Claude Agent. Give that a read. Um, but if there's any other things you guys would
60:36
like to see me do, if you want to see like an advanced version, maybe I use my own personal vault a little bit more,
60:42
uh, let me know. I'm super open to doing more types of videos like this. Obviously, I do a lot of videos in the realm of the coding world and things
60:48
like that, but definitely open to more general purpose agentic workflow videos if this is something you go like. Uh,
60:54
one quick note to close on too is we do on takeoff we have our cloud code lessons. So, we have 23 lessons which
61:00
are 2 hours and 22 minutes. We have a couple more coming out just a few more days uh on some project stuff that we've
61:04
been working on. Uh this is a really great way to get up to speed on all of the features of cloud code everything in
61:10
its toolbox. So if you are somebody inclined who is like wow cloud code seems really cool I should learn more about this really really excellent
61:15
resource we put together so that you guys can go learn how to use cloud code. So thank you for watching again. Uh share this with your friends if you
61:21
found this helpful. Uh goes a lot to help me out. Uh thanks for watching guys. We'll be back soon with more videos.