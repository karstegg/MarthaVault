name: Autonomous Basic

on:
  issues:
    types: [opened]

jobs:
  basic-autonomous:
    runs-on: ubuntu-latest
    if: contains(github.event.issue.title, 'Autonomous Process WhatsApp Reports')
    
    steps:
    - name: Parse Issue Date
      id: parse
      run: |
        echo "Autonomous workflow triggered successfully"
        echo "Issue title: ${{ github.event.issue.title }}"
        
        # Extract date from issue title
        issue_title="${{ github.event.issue.title }}"
        if [[ "$issue_title" =~ ([0-9]{4}-[0-9]{2}-[0-9]{2}) ]]; then
          report_date="${BASH_REMATCH[1]}"
          echo "Found report date: $report_date"
          echo "report_date=$report_date" >> $GITHUB_OUTPUT
        else
          echo "No valid date found in issue title"
          exit 1
        fi
        
    - name: Check Codespace Status
      id: codespace
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        echo "Checking for active Codespace..."
        
        # Look for active codespace
        CODESPACE_NAME=$(gh codespace list --repo ${{ github.repository }} --json name,state | jq -r '.[] | select(.state=="Available") | .name' | head -1)
        
        if [ -z "$CODESPACE_NAME" ]; then
          echo "No active Codespace found"
          echo "codespace_status=not_found" >> $GITHUB_OUTPUT
          echo "codespace_name=" >> $GITHUB_OUTPUT
        else
          echo "Found active Codespace: $CODESPACE_NAME"
          echo "codespace_status=found" >> $GITHUB_OUTPUT  
          echo "codespace_name=$CODESPACE_NAME" >> $GITHUB_OUTPUT
        fi
        
    - name: Extract WhatsApp Data from Codespace
      id: extract
      if: steps.codespace.outputs.codespace_status == 'found'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        echo "Extracting WhatsApp data from Codespace..."
        echo "Target Date: ${{ steps.parse.outputs.report_date }}"
        echo "Codespace: ${{ steps.codespace.outputs.codespace_name }}"
        
        # Extract WhatsApp messages via Codespace and save to file
        gh codespace ssh -c "${{ steps.codespace.outputs.codespace_name }}" -- "cd /workspaces/MarthaVault && python3 -c \"
import sys
sys.path.append('.devcontainer')
from codespace_direct_processing import WhatsAppDataExtractor
extractor = WhatsAppDataExtractor()
messages = extractor.extract_whatsapp_messages('${{ steps.parse.outputs.report_date }}')
print('WHATSAPP_DATA_START')
print(messages)
print('WHATSAPP_DATA_END')
\"" > whatsapp_data.txt
        
        if [ -s whatsapp_data.txt ]; then
          echo "WhatsApp data extracted successfully"
          echo "extraction_status=success" >> $GITHUB_OUTPUT
        else
          echo "WhatsApp data extraction failed"
          echo "extraction_status=failed" >> $GITHUB_OUTPUT
          exit 1
        fi

    - name: Process Reports with Gemini
      id: process
      if: steps.extract.outputs.extraction_status == 'success'
      env:
        GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
      run: |
        echo "Processing reports with Gemini API..."
        
        # Extract WhatsApp data from file
        WHATSAPP_DATA=$(sed -n '/WHATSAPP_DATA_START/,/WHATSAPP_DATA_END/p' whatsapp_data.txt | sed '1d;$d')
        
        # Process with Gemini API using existing Python script
        python3 << 'EOF'
import os
import json
import google.generativeai as genai
from datetime import datetime

# Configure Gemini
genai.configure(api_key=os.environ['GEMINI_API_KEY'])
model = genai.GenerativeModel('gemini-1.5-pro')

# Get WhatsApp data
whatsapp_data = """$WHATSAPP_DATA"""

# Process with Gemini (simplified for autonomous workflow)
response = model.generate_content(f"""
Process this WhatsApp daily production data for 2025-07-06:

{whatsapp_data}

Create structured JSON and Markdown reports following the Report Templates.
Output the results clearly marked for file creation.
""")

print("GEMINI_PROCESSING_COMPLETE")
print(response.text)
EOF
        
        if [ $? -eq 0 ]; then
          echo "Gemini processing completed successfully"
          echo "processing_status=success" >> $GITHUB_OUTPUT
        else
          echo "Gemini processing failed"
          echo "processing_status=failed" >> $GITHUB_OUTPUT
        fi
        
    - name: Report Final Status
      if: always()
      run: |
        echo "AUTONOMOUS WORKFLOW COMPLETE"
        echo "Report Date: ${{ steps.parse.outputs.report_date }}"
        echo "Codespace Status: ${{ steps.codespace.outputs.codespace_status }}"
        
        if [ "${{ steps.codespace.outputs.codespace_status }}" = "found" ]; then
          echo "Codespace Name: ${{ steps.codespace.outputs.codespace_name }}"
          echo "WhatsApp Extraction: ${{ steps.extract.outputs.extraction_status }}"
          echo "Gemini Processing: ${{ steps.process.outputs.processing_status }}"
          
          if [ "${{ steps.extract.outputs.extraction_status }}" = "success" ] && [ "${{ steps.process.outputs.processing_status }}" = "success" ]; then
            echo "SUCCESS: WhatsApp data extracted and processed with Gemini"
            echo "Ready for file creation and Claude Code review"
          else
            echo "FAILURE: Processing incomplete - check logs above"
          fi
        else
          echo "Codespace required for WhatsApp MCP data extraction"
        fi