name: Test Gemini Processing Quality

on:
  workflow_dispatch:
    inputs:
      test_message:
        description: 'WhatsApp message to test'
        required: true
        default: |
          12-08-2025 

          Safety  Clear
           
          ROM:             4779 v 6903t 
          Product:       2702 v 6514t
          Loads:          13, 50, 58   Orepass full from weekend with Seam1. So day shift couldn't run plant until ore pass cleared of seam 1 

           Blast:Actual vs Plan ? vs16 

            TMMs Availability:
          DTs: 97%
          FLs: 94%  
          HDs: 84%    
          RTs: 91%     
          SRs: 93%    

          DZ13: 100% 
          GD12: 0% 

          Start of Shift-Production TMM
          DT:  9/9    
          FL:  6/6    
          HD: 5/6     HD53 fuses 
          RT:  5/6     RT50 transmission (delay at stores in issuing for delivery) 
          SR:  5/6     SR27 excessive smoke 

          Emulsion UVs 
          (UV62,66,108) = 95%

          Logistics UV
          (UV54,59,120)= 33% 
          Manlifts
          Sampling (UV77,123) = 0% 
          Survey (UV98,99) = 97%

          TMM
          Breakdowns (Services & Graben)
          UV90- water pump & timing
          UV54- oil leak 
          UV59- engine 
          UV69- brakes 
          UV77- bucket movement
          UV119- warning sign 
          UV123- outrigger 
          UV133- propshaft
          GR12- brakes 
          SR46- pump 

          Plant blockages- 0
          Fire alarms- 0

jobs:
  test-processing:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
      
      - name: Process Test Message with Gemini
        uses: google-github-actions/run-gemini-cli@main
        with:
          prompt: |
            # WhatsApp Production Report Processing Quality Test
            
            **Report Date**: 2025-08-12
            **Site**: Gloria (based on ore pass reference and equipment mix)
            **Engineer**: Sipho Dubazane
            
            ## Raw WhatsApp Message:
            ${{ github.event.inputs.test_message }}
            
            ## Processing Instructions:
            
            **CRITICAL**: You MUST follow the EXACT templates from the Report Templates folder as specified in `GEMINI.md` Section 8.
            
            **MANDATORY STEPS:**
            1. **Read GEMINI.md Section 8** - Contains template selection rules
            2. **Read Report Templates folder** - Contains actual templates to use:
               - `Report Templates/Standard Mine Site Report Template.md` (for Gloria)
            3. **Apply Section 8.1** - Critical dating rule (report date vs data date)  
            4. **Use Section 8.2** - Hierarchical folder structure `daily_production/data/YYYY-MM/DD/`
            5. **Follow Template Exactly** - JSON and Markdown from Report Templates folder
            6. **Apply Section 8.5** - Data extraction rules
            
            **üö® CRITICAL DATA VALIDATION:**
            - NEVER fabricate data that doesn't exist in the raw WhatsApp content
            - Use "null" for missing numeric values (like silo levels which aren't mentioned)
            - Use "Nothing Reported" for missing sections
            - Include source validation section with actual quotes from the message
            - Remember the PR #7 lesson: data accuracy is MORE important than completeness
            
            **Expected Template**: Standard Mine Site (Gloria specific)
            **Required Gloria additions**: Silo levels (should be null since not in message)
            
            **QUALITY TEST FOCUS:**
            1. Extract ONLY actual data: ROM (4779 v 6903), Product (2702 v 6514)
            2. Parse equipment availability: DT 97%, FL 94%, HD 84%, RT 91%, SR 93%
            3. Parse breakdowns: UV90, UV54, UV59, UV69, UV77, UV119, UV123, UV133, GR12, SR46
            4. Handle missing silo data correctly (use null, don't fabricate)
            5. Apply correct dating (report date 2025-08-12, data date 2025-08-11)
            
            Process this message and create the structured output files in the correct repository hierarchy.
          gemini_api_key: ${{ secrets.GEMINI_API_KEY }}
          
      - name: Analyze Processing Quality
        run: |
          echo "üîç Analyzing Gemini Processing Quality..."
          echo "===================================="
          
          # Check if files were created
          if find daily_production -name "*2025-08-12*" -type f | grep -q .; then
            echo "‚úÖ Files created successfully"
            
            # List created files
            echo ""
            echo "üìÅ Created Files:"
            find daily_production -name "*2025-08-12*" -type f | while read file; do
              echo "  - $file"
            done
            
            # Check JSON data quality if Gloria file exists
            if [ -f "daily_production/data/2025-08/12/2025-08-12_gloria.json" ]; then
              echo ""
              echo "üéØ Data Quality Analysis:"
              
              # Extract key values
              rom_actual=$(jq -r '.production.rom.actual // "null"' daily_production/data/2025-08/12/2025-08-12_gloria.json)
              rom_target=$(jq -r '.production.rom.target // "null"' daily_production/data/2025-08/12/2025-08-12_gloria.json)
              product_actual=$(jq -r '.production.product.actual // "null"' daily_production/data/2025-08/12/2025-08-12_gloria.json)
              dt_availability=$(jq -r '.equipment_availability.tmm.dt // .equipment_availability.tmm.DT // "null"' daily_production/data/2025-08/12/2025-08-12_gloria.json)
              silo_levels=$(jq -r '.silo_levels // "null"' daily_production/data/2025-08/12/2025-08-12_gloria.json)
              
              echo "  ROM Actual: $rom_actual (expected: 4779)"
              echo "  ROM Target: $rom_target (expected: 6903)" 
              echo "  Product Actual: $product_actual (expected: 2702)"
              echo "  DT Availability: $dt_availability (expected: 97)"
              echo "  Silo Levels: $silo_levels (expected: null or proper data)"
              
              # Check if source validation exists
              if jq -e '.source_validation' daily_production/data/2025-08/12/2025-08-12_gloria.json >/dev/null 2>&1; then
                echo "  ‚úÖ Source validation section present"
              else
                echo "  ‚ùå Source validation section missing"
              fi
              
              # Validate key data points
              if [ "$rom_actual" = "4779" ] && [ "$rom_target" = "6903" ] && [ "$product_actual" = "2702" ]; then
                echo "  ‚úÖ Core production data extracted correctly"
              else
                echo "  ‚ùå Core production data extraction errors"
              fi
              
            else
              echo "‚ùå Expected Gloria JSON file not found"
            fi
            
          else
            echo "‚ùå No files were created"
          fi
          
      - name: Display Results Summary
        run: |
          echo ""
          echo "üìã PROCESSING QUALITY TEST RESULTS"
          echo "=================================="
          echo "Date: $(date)"
          echo "Test Message: Gloria mine report (2025-08-12)"
          echo "Expected Template: Standard Mine Site"
          echo "Expected Engineer: Sipho Dubazane"
          echo ""
          echo "KEY VALIDATION POINTS:"
          echo "1. Data accuracy (no fabrication): See analysis above"
          echo "2. Template compliance: Check file structure"
          echo "3. Missing data handling: Silo levels should be null"
          echo "4. Source validation: Should include exact quotes"
          echo ""
          if find daily_production -name "*2025-08-12*" -type f | grep -q .; then
            echo "üéØ RESULT: Processing completed - Review files for quality"
          else
            echo "üö® RESULT: Processing failed - No files created"
          fi