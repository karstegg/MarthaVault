name: Autonomous Codespace Processing (Fixed)

on:
  issues:
    types: [opened]
  repository_dispatch:
    types: [claude_process_reports]
  workflow_dispatch:
    inputs:
      report_date:
        description: 'Report date (YYYY-MM-DD)'
        required: true
        type: string

jobs:
  orchestrate-codespace-processing:
    runs-on: ubuntu-latest
    if: |
      (github.event_name == 'issues' && 
       contains(github.event.issue.title, 'Autonomous Process WhatsApp Reports')) ||
      github.event_name == 'repository_dispatch' ||
      github.event_name == 'workflow_dispatch'
    
    steps:
    - name: Parse Orchestration Request
      id: parse-request
      run: |
        echo "Claude Cloud Orchestration Request Received"
        
        # Parse different trigger sources
        if [ "${{ github.event_name }}" == "issues" ]; then
          # Extract processing request from GitHub Issue
          issue_title="${{ github.event.issue.title }}"
          echo "Processing GitHub Issue: $issue_title"
          
          # Parse date from issue title
          if [[ "$issue_title" =~ ([0-9]{4}-[0-9]{2}-[0-9]{2}) ]]; then
            report_date="${BASH_REMATCH[1]}"
            echo "Extracted date: $report_date"
          else
            echo "No valid date found in issue title"
            exit 1
          fi
          
          trigger_source="claude_cloud_issue"
          
        elif [ "${{ github.event_name }}" == "repository_dispatch" ]; then
          report_date="${{ github.event.client_payload.report_date }}"
          trigger_source="claude_cloud_dispatch"
          
        else
          report_date="${{ inputs.report_date }}"
          trigger_source="${{ inputs.trigger_source }}"
        fi
        
        echo "report_date=$report_date" >> $GITHUB_OUTPUT
        echo "trigger_source=$trigger_source" >> $GITHUB_OUTPUT
        
        echo "Orchestration request parsed successfully"
        echo "Report Date: $report_date"
        echo "Trigger Source: $trigger_source"

    - name: Execute Codespace Processing
      id: codespace-execution
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        echo "Triggering Codespace execution for ${{ steps.parse-request.outputs.report_date }}"
        
        # Find active codespace
        CODESPACE_NAME=$(gh codespace list --repo ${{ github.repository }} --json name,state | jq -r '.[] | select(.state=="Available") | .name' | head -1)
        
        if [ -z "$CODESPACE_NAME" ]; then
          echo "No active Codespace found"
          echo "Please ensure a Codespace is running with WhatsApp MCP server"
          exit 1
        fi
        
        echo "Found active Codespace: $CODESPACE_NAME"
        
        # Execute the processing script in Codespace
        echo "Executing WhatsApp report processing..."
        
        # Run Python script in Codespace remotely
        gh codespace ssh -c "$CODESPACE_NAME" -- "cd /workspaces/MarthaVault && python3 .devcontainer/codespace-direct-processing.py ${{ steps.parse-request.outputs.report_date }}"
        
        EXECUTION_STATUS=$?
        
        if [ $EXECUTION_STATUS -eq 0 ]; then
          echo "Codespace processing completed successfully"
          echo "execution_status=success" >> $GITHUB_OUTPUT
        else
          echo "Codespace processing failed"
          echo "execution_status=failed" >> $GITHUB_OUTPUT
          exit 1
        fi

    - name: Generate Processing Report
      if: always()
      run: |
        echo "AUTONOMOUS PROCESSING REPORT"
        echo "Report Date: ${{ steps.parse-request.outputs.report_date }}"
        echo "Triggered By: ${{ steps.parse-request.outputs.trigger_source }}"
        echo "Execution Status: ${{ steps.codespace-execution.outputs.execution_status }}"
        echo "Processing Time: $(date -u '+%Y-%m-%d %H:%M:%S UTC')"
        
        if [ "${{ steps.codespace-execution.outputs.execution_status }}" == "success" ]; then
          echo "SUCCESS: WhatsApp MCP data extracted and processed"
          echo "Files created in daily_production/data/"
          echo "Ready for Claude Cloud review"
        else
          echo "FAILURE: Processing incomplete - check logs above"
        fi

    - name: Create Results Issue for Claude Review
      if: steps.codespace-execution.outputs.execution_status == 'success'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        # Create review issue for Claude Cloud
        gh issue create \
          --title "Claude Review Required: ${{ steps.parse-request.outputs.report_date }} Reports" \
          --body "## Autonomous Processing Complete

**Report Date**: ${{ steps.parse-request.outputs.report_date }}
**Processed By**: Codespace WhatsApp MCP + Gemini
**Status**: Ready for Claude Cloud review

### Files Created
Files in daily_production/data/ folder

### Claude Cloud Review Tasks
- [ ] Verify data accuracy against WhatsApp source
- [ ] Confirm template compliance
- [ ] Check JSON schema consistency
- [ ] Validate equipment codes and analysis
- [ ] Approve or request corrections

**Auto-generated by Autonomous Processing System**" \
          --label "claude-review,daily-production,autonomous,needs-review"