name: WhatsApp Production Reports
on:
  repository_dispatch:
    types: [process_whatsapp_reports]
  workflow_dispatch:
    inputs:
      date:
        description: 'Report date (YYYY-MM-DD)'
        required: false

jobs:
  process-reports:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
      
      - name: Process WhatsApp Data with Gemini
        uses: google-github-actions/run-gemini-cli@main
        with:
          prompt: |
            # WhatsApp Production Report Processing
            
            **Report Date**: ${{ github.event.client_payload.report_date || inputs.date || 'today' }}
            **Group Chat**: ${{ github.event.client_payload.group_chat_id || '27834418149-1537194373@g.us' }}
            
            ## Raw WhatsApp Messages:
            ${{ toJson(github.event.client_payload.messages) }}
            
            ## Engineers by Site:
            - **Nchwaning 2**: Johan Kotze (diesel fleet)
            - **Nchwaning 3**: Sello Sease (BEV testing: 7 BEV DTs, 6 BEV FLs)
            - **Gloria**: Sipho Dubazane (silo management)
            - **Shafts & Winders**: Xavier Peterson (infrastructure)
            
            ## Processing Instructions:
            
            **CRITICAL**: You MUST follow the EXACT templates and specifications in `GEMINI.md` Section 8 "Daily Production Report Processing". This file contains all templates and requirements.
            
            **MANDATORY STEPS:**
            1. **Read GEMINI.md Section 8** - Contains all template specifications
            2. **Parse Messages** - Identify engineer reports by content
            3. **Apply Section 8.1** - Critical dating rule (report date vs data date)
            4. **Use Section 8.2** - Hierarchical folder structure `daily_production/data/YYYY-MM/DD/`
            5. **Follow Section 8.3** - JSON template exactly
            6. **Follow Section 8.4** - Markdown template exactly  
            7. **Apply Section 8.5** - Data extraction rules
            
            **NO OTHER TEMPLATES OR FORMATS ARE ACCEPTABLE**
            
            Process all available reports and create the structured output files.
          gemini_api_key: ${{ secrets.GEMINI_API_KEY }}
          
      - name: Commit processed reports
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add daily_production/data/
          git commit -m "ðŸ¤– Process daily production reports from WhatsApp MCP
          
          Report Date: ${{ github.event.client_payload.report_date || inputs.date }}
          Messages Processed: ${{ github.event.client_payload.messages && github.event.client_payload.messages.length || 0 }}
          Source: WhatsApp Group Chat via Codespace MCP" || echo "No changes to commit"
          git push