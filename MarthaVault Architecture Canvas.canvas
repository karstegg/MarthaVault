{
	"nodes":[
		{"id":"current-tech-stack","type":"text","text":"## Current Technical Stack (v2.0)\n\n**Core Platform**\n- 📓 Obsidian vault (knowledge management)\n- 🤖 Claude Code CLI (AI assistant)\n- 📁 Git repository (version control)\n- 🪟 Windows PowerShell (automation)\n\n**Integration Layer**\n- 🔌 MCP Servers (WhatsApp, Memory)\n- 📊 Google Sheets API\n- 🎙️ Audio transcription tools\n- ☁️ Google Drive sync","x":-800,"y":-600,"width":400,"height":540,"color":"2"},
		{"id":"data-flow-current","type":"text","text":"## Current Data Flow\n\n**Intake Process**\n```\n00_inbox/ → /triage → Projects/\n     ↓         ↓         ↓\nRaw notes → Tagged → Organized\n```\n\n**Task Management**\n```\nIndividual tasks → master_task_list.md\n       ↓               ↓\n   Status sync ← Task queries\n```\n\n**External Integration**\n```\nWhatsApp ← MCP → Claude Code\n    ↓              ↓\nProduction → Knowledge base\n```","x":-300,"y":-600,"width":400,"height":540,"color":"3"},
		{"id":"folder-architecture","type":"text","text":"## Repository Structure\n\n**📂 Core Folders**\n- `00_inbox/` - Raw input processing\n- `tasks/` - Task management system  \n- `projects/` - Active project folders\n- `people/` - Personnel directory\n- `reference/` - Knowledge base\n- `IDEAS/` - Innovation pipeline\n- `Schedule/` - Calendar integration\n\n**📂 Support Systems**\n- `.claude/` - CLI configuration\n- `.obsidian/` - Vault settings\n- `media/` - File attachments\n- `Templates/` - Note templates","x":200,"y":-600,"width":400,"height":540,"color":"4"},
		{"id":"title-architecture","type":"text","text":"# MarthaVault Architecture Deep Dive\n\n**Technical Components & System Interactions**\n\n← **Back to: [[MarthaVault Overview Canvas.canvas]]**","x":-500,"y":-1060,"width":800,"height":180,"color":"1"},
		{"id":"sub-agent-architecture","type":"text","text":"## Sub-Agent Architecture\n\n**🤖 Domain Specialists**\n- BEV Projects & Fire Safety\n- Shaft Monitoring & Maintenance\n- CAPEX & Project Management\n- Production Reports & Analysis\n- Safety & Compliance\n\n**🔗 Agent Coordination**\n```\nMain Claude CLI\n      ↓\n   Skill Detection\n      ↓\n Specialized Agent ← Context\n      ↓\n   Result Integration\n      ↓\n    User Response\n```","x":-300,"y":20,"width":400,"height":600,"color":"6"},
		{"id":"learning-system","type":"text","text":"## Learning & Adaptation System\n\n**📊 Confidence Scoring**\n```\nUser Action → Feedback Loop\n     ↓              ↓\nPattern Match ← Confidence Adjust\n     ↓              ↓\nThreshold Check → Auto/Manual Route\n```\n\n**🔄 Learning Mechanisms**\n- User edit pattern analysis\n- Success rate tracking\n- Confidence threshold adaptation\n- Pattern strengthening/decay\n- Nightly consolidation passes\n\n**⚙️ Conservative Thresholds**\n- ≥ 0.80: Auto-execute (strategy-aligned)\n- 0.60-0.79: Soft confirmation\n- < 0.60: Deliberate path with citations","x":200,"y":20,"width":400,"height":600,"color":"4"},
		{"id":"intuition-layer-arch","type":"text","text":"## Intuition Layer Architecture (Planned)\n\n**🧠 Smart Memory Layer**\n- MCP-based persistent memory\n- Semantic search capabilities\n- Strategic relationship modeling\n- Priority multiplication engine\n\n**👁️ Obsidian Watcher Plugin**\n- Real-time vault indexing\n- Metadata extraction\n- Hash-based change detection\n- Automatic MCP updates\n\n**🎯 Behavioral Intelligence**\n- Reflex cache (SQLite)\n- Skills library\n- Policy memory\n- Confidence-based routing","x":-800,"y":20,"width":400,"height":600,"color":"5"},
		{"id":"mcp-integration","type":"text","text":"## MCP Integration Architecture\n\n**📝 Memory Service API**\n```javascript\nupsert_document: { \n  path, mtime_iso, sha256, text \n}\n\nsearch_snippets: { \n  query, noteIds?, k \n} → [{ path, lineStart, lineEnd, text, score }]\n```\n\n**🕸️ Knowledge Graph API**\n```javascript\nupsert_nodes_and_edges: { \n  noteId, props: {...}, \n  edges: [{ type, toId }] \n}\n\nneighborhood: { \n  entities: [...], time?: {from,to}, k \n} → [{ noteId, score }]\n```\n\n**🔄 Current Integrations**\n- WhatsApp MCP server\n- Memory & Knowledge Graph services","x":-300,"y":680,"width":400,"height":720,"color":"2"},
		{"id":"performance-metrics","type":"text","text":"## Performance & Success Metrics\n\n**⚡ Speed Targets**\n- Common workflows: <3s median response\n- Complex analysis: <10s response\n- Learning consolidation: Nightly batches\n\n**✅ Quality Metrics**\n- >85% acceptance rate for reflexes\n- >70% strategic alignment for high-priority\n- <5% hallucination/citation errors\n- 100% workflow compatibility\n\n**📈 Learning Indicators**\n- Confidence improvement over 30 days\n- Pattern recognition accuracy gains\n- Reduced edit frequency\n- Increased auto-execution success","x":200,"y":680,"width":400,"height":720,"color":"5"},
		{"id":"strategy-integration","type":"text","text":"## Strategy Integration Engine\n\n**📈 Priority Calculation**\n```\nBase Priority = 0.30×Deadline + 0.25×ActiveProject \n              + 0.15×KeyPeople + 0.10×Standard\n              + 0.10×Recency + 0.05×Historical\n              - 0.05×ArchivedPenalty\n\nStrategy Multiplier:\n- Direct objective: 1 + ObjectiveWeight\n- One hop via project: 1 + 0.5×ObjectiveWeight\n- Focus-of-week: add FocusBoost\n\nFinal Priority = Base × Multiplier (capped at 2.0)\n```\n\n**📋 Strategy Components**\n- `CompanyStrategy.md` - Long-term objectives\n- `ActivePhase.md` - Current quarter focus\n- `FocusOfWeek.md` - Tactical priorities","x":-800,"y":680,"width":400,"height":720,"color":"3"},
		{"id":"development-environment","type":"text","text":"## Development Environment\n\n**🛠️ Tools & Platforms**\n- Visual Studio Code with Obsidian\n- Node.js for plugin development\n- Python for MCP servers\n- SQLite for local caching\n- Git for version control\n\n**🧪 Testing Framework**\n- Unit tests for individual components\n- Integration tests for MCP services\n- User acceptance testing workflows\n- Performance benchmarking suite\n- Rollback scenario validation","x":-300,"y":1440,"width":400,"height":460,"color":"4"},
		{"id":"navigation-arch","type":"text","text":"## 🧭 Related Views\n\n**[[MarthaVault Overview Canvas.canvas|MarthaVault Overview Canvas]]** ← Overview\n**[[MarthaVault Implementation Canvas.canvas]]** → Implementation\n**[[MarthaVault Workflow Canvas.canvas]]** → Workflows","x":200,"y":1440,"width":400,"height":300,"color":"1"},
		{"id":"security-considerations","type":"text","text":"## Security & Risk Management\n\n**🔒 Data Protection**\n- Local SQLite storage (no cloud AI training)\n- Git-based version control & rollback\n- Source-grounded responses only\n- Mandatory citation requirements\n\n**🛡️ Risk Mitigation**\n- Conservative confidence thresholds\n- Manual override capabilities\n- Zero-disruption deployment\n- Fallback to deliberate mode\n\n**🔄 Rollback Strategy**\n```\nIssue Detected → Immediate revert to v2.0\n       ↓\nParallel systems until resolved\n       ↓\nRedesign based on lessons learned\n```","x":-800,"y":1440,"width":400,"height":620,"color":"6"}
	],
	"edges":[
		{"id":"arch-edge-1","fromNode":"title-architecture","fromSide":"bottom","toNode":"current-tech-stack","toSide":"top","color":"2"},
		{"id":"arch-edge-2","fromNode":"title-architecture","fromSide":"bottom","toNode":"data-flow-current","toSide":"top","color":"3"},
		{"id":"arch-edge-3","fromNode":"title-architecture","fromSide":"bottom","toNode":"folder-architecture","toSide":"top","color":"4"},
		{"id":"arch-edge-4","fromNode":"current-tech-stack","fromSide":"bottom","toNode":"intuition-layer-arch","toSide":"top","color":"5"},
		{"id":"arch-edge-5","fromNode":"data-flow-current","fromSide":"bottom","toNode":"sub-agent-architecture","toSide":"top","color":"6"},
		{"id":"arch-edge-6","fromNode":"folder-architecture","fromSide":"bottom","toNode":"learning-system","toSide":"top","color":"4"},
		{"id":"arch-edge-7","fromNode":"intuition-layer-arch","fromSide":"bottom","toNode":"strategy-integration","toSide":"top","color":"3"},
		{"id":"arch-edge-8","fromNode":"sub-agent-architecture","fromSide":"bottom","toNode":"mcp-integration","toSide":"top","color":"2"},
		{"id":"arch-edge-9","fromNode":"learning-system","fromSide":"bottom","toNode":"performance-metrics","toSide":"top","color":"5"},
		{"id":"arch-edge-10","fromNode":"strategy-integration","fromSide":"bottom","toNode":"security-considerations","toSide":"top","color":"6"},
		{"id":"arch-edge-11","fromNode":"mcp-integration","fromSide":"bottom","toNode":"development-environment","toSide":"top","color":"4"},
		{"id":"arch-edge-12","fromNode":"performance-metrics","fromSide":"bottom","toNode":"navigation-arch","toSide":"top","color":"1"}
	]
}