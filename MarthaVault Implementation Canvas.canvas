{
	"nodes":[
		{"id":"title-implementation","type":"text","text":"# MarthaVault Implementation Plan\n\n**Intuition Layer Development - 6 Phase Approach**\n\n‚Üê **Back to: [[MarthaVault Overview Canvas.canvas]]**","x":-400,"y":-800,"width":800,"height":150,"color":"1"},
		{"id":"phase-0","type":"text","text":"## Phase 0: Foundation Analysis (Week 1)\n\n**üîç Research & Planning**\n\n**Objectives:**\n- Current vault analysis & workflow mapping\n- Sub-agent architecture research\n- Zero-disruption migration strategy design\n\n**Key Activities:**\n- Scan existing folder structure & patterns\n- Document current workflows (/task, /triage, /nn)\n- Analyze tagging system & linking patterns\n- Map integrations (WhatsApp MCP, memory systems)\n- Design preservation requirements\n\n**Deliverables:**\n- Current state documentation\n- Migration strategy document\n- Sub-agent technical specification\n- Risk mitigation plan","x":-700,"y":-400,"width":400,"height":680,"color":"2"},
		{"id":"phase-1","type":"text","text":"## Phase 1: MVP Foundation (Week 2)\n\n**üèóÔ∏è Core Infrastructure**\n\n**Objectives:**\n- Strategy layer implementation\n- Enhanced MCP integration\n- Core policy & skills setup\n\n**Key Activities:**\n- Create `strategy/` folder structure\n- Implement `CompanyStrategy.md` templates\n- Validate MCP Memory + Knowledge Graph\n- Create `system/policy.md` framework\n- Build first skill cards (Inbox‚ÜíTriage, Daily Note)\n\n**Technical Focus:**\n- API contracts for memory services\n- Strategic relationship modeling\n- 100% compatibility with existing commands","x":-200,"y":-400,"width":400,"height":680,"color":"3"},
		{"id":"phase-2","type":"text","text":"## Phase 2: Obsidian Plugin (Weeks 3-4)\n\n**üëÅÔ∏è Automated Vault Indexing**\n\n**Objectives:**\n- Real-time file monitoring\n- Metadata extraction & indexing\n- Integration with existing patterns\n\n**Key Activities:**\n- Implement file event listeners (debounced)\n- Create metadata extraction using Obsidian API\n- Build hash cache system for efficiency\n- Design settings UI for MCP endpoints\n- Preserve tagging system & file conventions\n\n**Technical Requirements:**\n- 500-1000ms debouncing for rapid changes\n- Ignore `.obsidian/` and temp files\n- Cache optimization to avoid redundant API calls","x":300,"y":-400,"width":400,"height":680,"color":"4"},
		{"id":"phase-4","type":"text","text":"## Phase 4: Advanced Integration (Week 5-6)\n\n**üéØ Strategic Alignment & Testing**\n\n**Objectives:**\n- Advanced strategy integration\n- Comprehensive workflow testing\n- Advanced commands implementation\n\n**Key Activities:**\n- Implement `FocusOfWeek.md` tactical priorities\n- Add strategic alignment in reflex decisions\n- Create strategy-biased agenda generation\n- Test with existing vault patterns\n- Build advanced commands (/mirror-vault, /predict-needs)\n\n**Priority Scoring Formula:**\n```\nscore = 0.30√óDeadline + 0.25√óProject + 0.15√óKeyPeople\n      + 0.10√óStandard + 0.10√óRecency + 0.05√óHistorical\n\nStrategy Multiplier = 1 + ObjectiveWeight\nFinal = score √ó Multiplier (capped at 2.0)\n```","x":-200,"y":350,"width":400,"height":810,"color":"6"},
		{"id":"phase-3","type":"text","text":"## Phase 3: Behavioral Intelligence (Weeks 4-5)\n\n**üß† Learning & Reflex System**\n\n**Objectives:**\n- Reflex cache implementation\n- Skills library with sub-agents\n- Learning integration system\n\n**Key Activities:**\n- Implement SQLite storage in `.obsidian/plugins/`\n- Create confidence scoring algorithms\n- Build pattern matching (intent + entities + site)\n- Add sub-agent spawning for specialized skills\n- Implement feedback loop from user edits\n\n**Confidence Thresholds:**\n- ‚â• 0.80 + strategy-aligned: Auto-execute\n- 0.60-0.79: Soft confirmation\n- < 0.60: Deliberate path with citations\n- Never auto-execute on first occurrence","x":-700,"y":350,"width":400,"height":690,"color":"5"},
		{"id":"phase-5","type":"text","text":"## Phase 5: Production Deployment (Week 6+)\n\n**üöÄ Live System & Optimization**\n\n**Objectives:**\n- Gradual migration execution\n- Learning & adaptation monitoring\n- Performance optimization\n\n**Rollout Strategy:**\n1. Start with inbox triage & daily notes\n2. Add meeting & task workflows  \n3. Enable production report processing\n4. Full strategic alignment activation\n\n**Success Metrics:**\n- Speed: <3s median response for common workflows\n- Quality: >85% acceptance rate for reflexes\n- Learning: Confidence improvements over 30 days\n- Strategic: >70% high-priority linked to objectives\n\n**Monitoring:**\n- Performance dashboard\n- Success metrics tracking\n- Continuous improvement process","x":300,"y":350,"width":400,"height":810,"color":"4"},
		{"id":"sub-agent-system","type":"text","text":"## Sub-Agent System Architecture\n\n**ü§ñ Specialized Agents**\n\n**Domain Experts:**\n- **BEV Projects**: Battery safety & fire risk\n- **Shaft Monitoring**: Maintenance & inspections\n- **CAPEX**: Capital project management\n- **Production Reports**: Data analysis\n- **Safety & Compliance**: Regulatory requirements\n\n**Coordination Flow:**\n```\nMain Claude CLI\n      ‚Üì\n   Skill Detection\n      ‚Üì\nSpecialized Agent ‚Üê Domain Context\n      ‚Üì\n  Result Integration\n      ‚Üì\n   User Response\n```\n\n**Context Passing:**\n- Claude.md inheritance for domain knowledge\n- Project-specific data integration\n- Strategic priority weighting","x":-200,"y":1280,"width":400,"height":760,"color":"3"},
		{"id":"technical-components","type":"text","text":"## Core Technical Components\n\n**üîß Implementation Stack**\n\n**Memory & Graph Services (MCP)**\n- Basic Memory: Document chunks + embeddings\n- Knowledge Graph: Property graph relationships\n- Strategic integration: Objective linking\n\n**Obsidian Watcher Plugin**\n- File event monitoring with debouncing\n- Metadata extraction via Obsidian API\n- Hash-based change detection\n- Automatic MCP service updates\n\n**Behavioral Intelligence**\n- Reflex Cache: Q‚ÜíA patterns + confidence\n- Skills Library: Domain templates\n- Policy Memory: Always-on rules\n- Gatekeeper: Confidence-based routing","x":-700,"y":1280,"width":400,"height":760,"color":"2"},
		{"id":"learning-mechanisms","type":"text","text":"## Learning & Adaptation Mechanisms\n\n**üìä Continuous Improvement**\n\n**Feedback Integration:**\n- Track user acceptance vs edit rates\n- Monitor success patterns per skill\n- Adjust confidence thresholds dynamically\n- Identify successful workflows for strengthening\n\n**Pattern Recognition:**\n- Intent + entities + site + time window matching\n- Seasonal/temporal pattern detection\n- User preference learning\n- Strategic priority evolution tracking\n\n**Self-Evolution (Research-Based):**\n- Nightly consolidation passes (\"sleep\")\n- Pattern decay for unused reflexes\n- Confidence strengthening for successful patterns\n- Strategy alignment optimization","x":300,"y":1280,"width":400,"height":760,"color":"5"},
		{"id":"risk-mitigation","type":"text","text":"## Risk Mitigation & Safety\n\n**üõ°Ô∏è Conservative Approach**\n\n**Zero-Disruption Principles:**\n- All existing workflows continue unchanged\n- 100% backward compatibility maintained\n- Progressive enhancement without breaking patterns\n- Git-based rollback for easy reversion\n\n**Safety Mechanisms:**\n- High confidence requirements for auto-execution\n- User approval for ambiguous cases\n- Manual override capabilities always available\n- Source-grounded responses with citations\n\n**Rollback Strategy:**\n```\nIssue Detected ‚Üí Immediate revert to v2.0\n       ‚Üì\nParallel systems until resolved\n       ‚Üì\nRedesign based on lessons learned\n```","x":-700,"y":2120,"width":400,"height":720,"color":"6"},
		{"id":"success-metrics","type":"text","text":"## Success Metrics & KPIs\n\n**üìà Measurable Outcomes**\n\n**Performance Targets:**\n- **Speed**: <3s median for common workflows\n- **Quality**: >85% acceptance rate for reflexes\n- **Learning**: Confidence improvements over 30 days\n- **Strategic**: >70% high-priority linked to objectives\n- **Compatibility**: 100% existing workflow preservation\n\n**Learning Indicators:**\n- Pattern recognition accuracy gains\n- Reduced user edit frequency\n- Increased auto-execution success rates\n- Strategic alignment effectiveness\n\n**Quality Assurance:**\n- <5% hallucination/citation errors\n- Source-grounded response requirements\n- User satisfaction with AI assistance\n- Workflow efficiency improvements","x":-200,"y":2120,"width":400,"height":720,"color":"4"},
		{"id":"timeline-summary","type":"text","text":"## Timeline & Resource Summary\n\n**‚è±Ô∏è Development Schedule**\n\n**6-Week Implementation:**\n- **Week 1**: Foundation Analysis (Phase 0)\n- **Week 2**: MVP Foundation (Phase 1)\n- **Weeks 3-4**: Obsidian Plugin (Phase 2)\n- **Weeks 4-5**: Behavioral Intelligence (Phase 3)\n- **Week 5-6**: Advanced Integration (Phase 4)\n- **Week 6+**: Production Deployment (Phase 5)\n\n**Project Team:**\n- **Lead**: Greg (architecture, requirements, testing)\n- **Technical Advisor**: GPT-5 (strategy, technical review)\n- **AI Assistant**: Claude Code (development execution)\n\n**Key Milestones:**\n- MVP Foundation: End Week 2\n- Plugin Beta: End Week 4\n- Full System: Week 6\n- Production Optimization: Ongoing","x":300,"y":2120,"width":400,"height":720,"color":"1"},
		{"id":"navigation-impl","type":"text","text":"## üß≠ Related Views\n\n**[[MarthaVault Overview Canvas.canvas]]** ‚Üê Overview\n**[[MarthaVault Architecture Canvas.canvas]]** ‚Üê Architecture\n**[[MarthaVault Workflow Canvas.canvas]]** ‚Üí Workflows","x":-400,"y":3120,"width":800,"height":200,"color":"1"}
	],
	"edges":[
		{"id":"impl-edge-1","fromNode":"title-implementation","fromSide":"bottom","toNode":"phase-0","toSide":"top","color":"2"},
		{"id":"impl-edge-2","fromNode":"title-implementation","fromSide":"bottom","toNode":"phase-1","toSide":"top","color":"3"},
		{"id":"impl-edge-3","fromNode":"title-implementation","fromSide":"bottom","toNode":"phase-2","toSide":"top","color":"4"},
		{"id":"impl-edge-4","fromNode":"phase-0","fromSide":"right","toNode":"phase-1","toSide":"left","color":"3"},
		{"id":"impl-edge-5","fromNode":"phase-1","fromSide":"right","toNode":"phase-2","toSide":"left","color":"4"},
		{"id":"impl-edge-6","fromNode":"phase-0","fromSide":"bottom","toNode":"phase-3","toSide":"top","color":"5"},
		{"id":"impl-edge-7","fromNode":"phase-1","fromSide":"bottom","toNode":"phase-4","toSide":"top","color":"6"},
		{"id":"impl-edge-8","fromNode":"phase-2","fromSide":"bottom","toNode":"phase-5","toSide":"top","color":"4"},
		{"id":"impl-edge-9","fromNode":"phase-3","fromSide":"right","toNode":"phase-4","toSide":"left","color":"6"},
		{"id":"impl-edge-10","fromNode":"phase-4","fromSide":"right","toNode":"phase-5","toSide":"left","color":"4"},
		{"id":"impl-edge-11","fromNode":"phase-3","fromSide":"bottom","toNode":"technical-components","toSide":"top","color":"2"},
		{"id":"impl-edge-12","fromNode":"phase-4","fromSide":"bottom","toNode":"sub-agent-system","toSide":"top","color":"3"},
		{"id":"impl-edge-13","fromNode":"phase-5","fromSide":"bottom","toNode":"learning-mechanisms","toSide":"top","color":"5"},
		{"id":"impl-edge-14","fromNode":"technical-components","fromSide":"bottom","toNode":"risk-mitigation","toSide":"top","color":"6"},
		{"id":"impl-edge-15","fromNode":"sub-agent-system","fromSide":"bottom","toNode":"success-metrics","toSide":"top","color":"4"},
		{"id":"impl-edge-16","fromNode":"learning-mechanisms","fromSide":"bottom","toNode":"timeline-summary","toSide":"top","color":"1"},
		{"id":"impl-edge-17","fromNode":"risk-mitigation","fromSide":"bottom","toNode":"navigation-impl","toSide":"top","color":"1"},
		{"id":"impl-edge-18","fromNode":"success-metrics","fromSide":"bottom","toNode":"navigation-impl","toSide":"top","color":"1"},
		{"id":"impl-edge-19","fromNode":"timeline-summary","fromSide":"bottom","toNode":"navigation-impl","toSide":"top","color":"1"}
	]
}